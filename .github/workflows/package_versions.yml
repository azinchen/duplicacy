name: Update GitHub package versions

on:
  schedule:
    - cron: 0 */3 * * *

env:
  CONFIG_FILE: "github_packages.json"

jobs:
  update_github_releases:
    name: Update github package versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repository: ["gilbertchen/duplicacy", "just-containers/s6-overlay"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Get branch name
        id: branch
        shell: bash
        run: |
          FROM_PR=false;
          if [[ ${GITHUB_REF} == *"packageupdaterbot/"* ]]; then
            FROM_PR=true;
          fi
          echo "::set-output name=from_pr::${FROM_PR}"

          BRANCH=$(echo ${GITHUB_REF} | sed -e "s/.*\///g")
          echo "::set-output name=branch::${BRANCH}"

          echo "Base branch=${BRANCH}, from_pr=${FROM_PR}"

      - name: Create package versions file if not exists
        if: steps.branch.outputs.from_pr == 'false'
        shell: bash
        run: |
          if [[ ! -f "${{ env.CONFIG_FILE }}" ]]; then
            echo "${{ env.CONFIG_FILE }} not found, create empty"
            echo "[]" > ${{ env.CONFIG_FILE }}
          fi

      - name: Create node if not exists
        if: steps.branch.outputs.from_pr == 'false'
        shell: bash
        run: |
          NODE=$(jq '.[] | select(.name == "${{ matrix.repository }}").name' ${{ env.CONFIG_FILE }})

          if [[ ! ${NODE} == *"${{ matrix.repository }}"* ]]; then
            echo "Information about ${{ matrix.repository }} package not found in ${{ env.CONFIG_FILE }}, create empty"
            TEMPFILENAME=$(tempfile -d .)
            (jq '.[]' ${{ env.CONFIG_FILE }}; echo "{\"name\":\"${{ matrix.repository }}\",\"version\":\"\"}") | jq -s > ${TEMPFILENAME}
            mv ${TEMPFILENAME} ${{ env.CONFIG_FILE }}
          fi

      - name: Read config version
        if: steps.branch.outputs.from_pr == 'false'
        id: config_version
        shell: bash
        run: |
          VERSION=$(jq -r '.[] | select(.name == "${{ matrix.repository }}").version' ${{ env.CONFIG_FILE }})
          echo "::set-output name=version::${VERSION}"
          echo "Config version=${VERSION}"

      - name: Read repository version
        if: steps.branch.outputs.from_pr == 'false'
        id: repository_version
        shell: bash
        run: |
          TAG=$(curl -Ls https://api.github.com/repos/${{ matrix.repository }}/tags | jq -r "first.name")
          VERSION=${TAG:1}
          BRANCH="packageupdaterbot/${{ matrix.repository }}-${VERSION}"
          echo "::set-output name=version::${VERSION}"
          echo "::set-output name=branch::${BRANCH}"
          echo "Repository version=${VERSION}, branch=${BRANCH}"

      - name: Update ${{ env.CONFIG_FILE }}
        if: (steps.config_version.outputs.version != steps.repository_version.outputs.version) &&
            (steps.branch.outputs.from_pr == 'false')
        shell: bash
        run: |
          TEMPFILENAME=$(tempfile -d .)
          jq '.[] | select(.name == "${{ matrix.repository }}").version = "${{ steps.repository_version.outputs.version }}"' ${{ env.CONFIG_FILE }} | jq -s > ${TEMPFILENAME}
          mv ${TEMPFILENAME} ${{ env.CONFIG_FILE }}

      - name: Create Pull Request, Bump ${{ matrix.repository }} from ${{ steps.config_version.outputs.version }} to ${{ steps.repository_version.outputs.version }}
        if: (steps.config_version.outputs.version != steps.repository_version.outputs.version) &&
            (steps.branch.outputs.from_pr == 'false')
        uses: peter-evans/create-pull-request@v3.10.1
        with:
          token: ${{ secrets.DUPLICACY_REPO_PAT }}
          branch: ${{ steps.repository_version.outputs.branch }}
          commit-message: Bump ${{ matrix.repository }} from ${{ steps.config_version.outputs.version }} to ${{ steps.repository_version.outputs.version }}
          delete-branch: true
          title: Bump ${{ matrix.repository }} from ${{ steps.config_version.outputs.version }} to ${{ steps.repository_version.outputs.version }}
          body: |
            Bump [${{ matrix.repository }}](https://github.com/${{ matrix.repository }}) from ${{ steps.config_version.outputs.version }} to ${{ steps.repository_version.outputs.version }}.

            - Auto-generated by [create-pull-request](https://github.com/peter-evans/create-pull-request)
          labels: |
            dependencies
            github_actions
